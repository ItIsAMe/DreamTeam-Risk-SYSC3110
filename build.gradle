plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}
version "3.0.0"
jar {
    baseName 'risk'
}

mainClassName = "com.dreamteam.view.HomeScreenFrame"

sourceCompatibility = 15

repositories {
    mavenCentral()
    jcenter()
}


configurations {
    jaxDoclet
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13'
    implementation 'com.github.cliftonlabs:json-simple:3.1.0'
}

test {
    useJUnit()

    maxHeapSize = '1G'
}

shadowJar {
    from sourceSets.main.java //add java files
    //from './worlds' //./extra_files/worlds -> ./worlds

}

task javadocs(type: Javadoc) {
    source = sourceSets.main.java.srcDirs
    classpath = sourceSets.main.runtimeClasspath
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task deployDocs(type: Copy) {
    dependsOn javadocs
    from "build/docs/javadoc"
    into "build/deployFull/documentation/javadoc"
}

task copyWorlds(type: Copy) {
    from "worlds"
    into "build/deployFull/worlds"
}

task copyReadMe(type: Copy) {
    from "README.md"
    into "build/deployFull/documentation"
}

task copyOtherDocs(type: Copy) {
    from "seq.pdf","uml.pdf","manual.pdf"
    into "build/deployFull/documentation"
}

task deployFull(type: Copy) {
    dependsOn copyWorlds
    dependsOn copyReadMe
    dependsOn copyOtherDocs
    dependsOn deployDocs
    dependsOn shadowJar
    from "build/libs"
    into "build/deployFull"
}

task stage(dependsOn: ['build', 'clean']) {
    build.mustRunAfter clean
}

gradle.taskGraph.whenReady {
    taskGraph ->
        if (taskGraph.hasTask(stage)) {
            test.enabled = false
        }
}

task zipDeploy(type: Zip) {
    dependsOn deployFull
    include 'README.md'
    from 'build/deployFull'
    include '*'
    include '*/**'

    archiveName 'Deployment.zip'
}

sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
        }
    }
}